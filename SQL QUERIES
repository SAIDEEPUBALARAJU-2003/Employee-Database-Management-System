-- Table 1: Job Department
CREATE TABLE JobDepartment (
    Job_ID INT PRIMARY KEY,
    jobdept VARCHAR(50),
    name VARCHAR(100),
    description TEXT,
    salaryrange VARCHAR(50)
);
-- Table 2: Salary/Bonus
CREATE TABLE SalaryBonus (
    salary_ID INT PRIMARY KEY,
    Job_ID INT,
    amount DECIMAL(10,2),
    annual DECIMAL(10,2),
    bonus DECIMAL(10,2),
    CONSTRAINT fk_salary_job FOREIGN KEY (job_ID) REFERENCES JobDepartment(Job_ID)
        ON DELETE CASCADE ON UPDATE CASCADE
);
-- Table 3: Employee
CREATE TABLE Employee (
    emp_ID INT PRIMARY KEY,
    firstname VARCHAR(50),
    lastname VARCHAR(50),
    gender VARCHAR(10),
    age INT,
    contact_add VARCHAR(100),
    emp_email VARCHAR(100) UNIQUE,
    emp_pass VARCHAR(50),
    Job_ID INT,
    CONSTRAINT fk_employee_job FOREIGN KEY (Job_ID)
        REFERENCES JobDepartment(Job_ID)
        ON DELETE SET NULL
        ON UPDATE CASCADE
);

-- Table 4: Qualification
CREATE TABLE Qualification (
    QualID INT PRIMARY KEY,
    Emp_ID INT,
    Position VARCHAR(50),
    Requirements VARCHAR(255),
    Date_In DATE,
    CONSTRAINT fk_qualification_emp FOREIGN KEY (Emp_ID)
        REFERENCES Employee(emp_ID)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- Table 5: Leaves
CREATE TABLE Leaves (
    leave_ID INT PRIMARY KEY,
    emp_ID INT,
    date DATE,
    reason TEXT,
    CONSTRAINT fk_leave_emp FOREIGN KEY (emp_ID) REFERENCES Employee(emp_ID)
        ON DELETE CASCADE ON UPDATE CASCADE
);

-- Table 6: Payroll
CREATE TABLE Payroll (
    payroll_ID INT PRIMARY KEY,
    emp_ID INT,
    job_ID INT,
    salary_ID INT,
    leave_ID INT,
    date DATE,
    report TEXT,
    total_amount DECIMAL(10,2),
    CONSTRAINT fk_payroll_emp FOREIGN KEY (emp_ID) REFERENCES Employee(emp_ID)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_payroll_job FOREIGN KEY (job_ID) REFERENCES JobDepartment(job_ID)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_payroll_salary FOREIGN KEY (salary_ID) REFERENCES SalaryBonus(salary_ID)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_payroll_leave FOREIGN KEY (leave_ID) REFERENCES Leaves(leave_ID)
        ON DELETE SET NULL ON UPDATE CASCADE
);

Employee Insights
Q1: How many unique employees are currently in the system?
SELECT COUNT(DISTINCT emp_id) AS total_employees FROM employees;

Q2: Which departments have the highest number of employees?
SELECT department_name, COUNT(*) AS employee_count
FROM employees
JOIN departments USING(department_id)
GROUP BY department_name
ORDER BY employee_count DESC;


Q3: What is the average salary per department?
SELECT department_name, AVG(salary) AS avg_salary
FROM employees
JOIN departments USING(department_id)
GROUP BY department_name;


Q4: Who are the top 5 highest-paid employees?
SELECT emp_name, salary
FROM employees
ORDER BY salary DESC
LIMIT 5;


Q5: What is the total salary expenditure across the company?
SELECT SUM(salary) AS total_salary_expenditure
FROM employees;


2. Job Role and Department Analysis
Q6: How many different job roles exist in each department?
SELECT department_name, COUNT(DISTINCT job_role) AS job_roles
FROM employees
JOIN departments USING(department_id)
GROUP BY department_name;


Q7: Which job roles offer the highest salary?
SELECT job_role, MAX(salary) AS max_salary
FROM employees
GROUP BY job_role
ORDER BY max_salary DESC;


Q8: Which departments have the highest total salary allocation?
SELECT department_name, SUM(salary) AS total_department_salary
FROM employees
JOIN departments USING(department_id)
GROUP BY department_name
ORDER BY total_department_salary DESC;


3. Qualification and Skills Analysis
Q9: How many employees have at least one qualification listed?
SELECT COUNT(DISTINCT emp_id) AS qualified_employees
FROM employee_qualifications;


Q10: Which positions require the most qualifications?
SELECT job_role, COUNT(*) AS total_qualifications
FROM employee_qualifications
JOIN employees USING(emp_id)
GROUP BY job_role
ORDER BY total_qualifications DESC;

 4. Leave and Absence Patterns
Q11: Which year had the most employees taking leaves?
SELECT YEAR(leave_date) AS year, COUNT(*) AS leave_count
FROM leaves
GROUP BY YEAR(leave_date)
ORDER BY leave_count DESC
LIMIT 1;


Q12: Which employees have taken the most leaves?
SELECT emp_name, COUNT(*) AS leave_days
FROM leaves
JOIN employees USING(emp_id)
GROUP BY emp_name
ORDER BY leave_days DESC
LIMIT 5;


Q13: What is the total number of leave days taken company-wide?
SELECT SUM(no_of_days) AS total_leave_days FROM leaves;


5. Payroll and Compensation Analysis
Q14: What is the total monthly payroll processed?
SELECT SUM(monthly_salary) AS total_payroll
FROM payroll;


Q15: What is the average bonus given per department?
SELECT department_name, AVG(bonus) AS avg_bonus
FROM employees
JOIN departments USING(department_id)
JOIN payroll USING(emp_id)
GROUP BY department_name;


Q16: Which department receives the highest total bonuses?
SELECT department_name, SUM(bonus) AS total_bonus
FROM employees
JOIN departments USING(department_id)
JOIN payroll USING(emp_id)
GROUP BY department_name
ORDER BY total_bonus DESC
LIMIT 1;


Q17: What is the average value of total_amount after considering leave deductions?
SELECT AVG(total_amount - leave_deduction) AS avg_net_salary
FROM payroll;


6. Employee Performance and Growth
Q18: Which year had the highest number of employee promotions?
SELECT YEAR(promotion_date) AS year, COUNT(*) AS total_promotions
FROM promotions
GROUP BY YEAR(promotion_date)
ORDER BY total_promotions DESC
LIMIT 1;
